import Pkg
Pkg.add("Plots")
pwd()
cd("ComicNEAT/")
import Pkg
Pkg.activate()
Pkg.add("Plots")
cd()
pwd()
ls()
readdir()
readdir()
length(filter(x -> x=="ComicNEAT", readdir()))
cd("documents")
pwd()
cd("git/captain-comic")
pwd()
length(filter(x -> x=="ComicNEAT", readdir()))
pwd()
fitness
Comic.add_instance(2,1,1,1,2)
2004.0
NAN
Nan
NaN
Int64(30.983866769659336)
Population(5,5)
Population(900,5)
next_generation
next_generation(Population(900,5))
next_generation(Population(900,5))
next_generation(Population(900,5))
@time mutable struct Individual
    fitness::Float32
    nodes::Vector{Node}
    connections::Vector{Connection}
end

test()
test()
test()
test()
test()
test()
test()
generation 65	fitness: 61.0	 species: 5/4 - 27	 largest net: 14
test()
test (generic function with 1 method)
using Pkg()
using Pkg
Pkg.add("JLD")
@time 1+1
 generation 13	fitness: 2071.0	 species: 1/6 - 71	 largest net: 96   8.982261 seconds (1.90 M allocations: 293.522 MiB, 0.65% gc time, 0.16% compilation time)
run_individual(generations[5].species[1].individuals[1], 2, 6)
run_individual(generations[5].species[1].individuals[1], 2, 6)
run_individual(generations[5].species[1].individuals[2], 2, 6)
generations[5].species[1].individuals[2]
generations[5].species[1].individuals
generations[1].species[1].individuals
generations[2].species[1].individuals
test()
nd
generations
run_individual(generations[8].species[1].individuals[1], 2, 6)
run_individual(generations[8].species[1].individuals[1], 2, 6)
run_individual(generations[8].species[1].individuals[1], 2, 6)
run_individual(generations[8].species[1].individuals[1], 2, 6)
run_individual(generations[8].species[1].individuals[1], 2, 6)
run_individual(generations[8].species[1].individuals[1], 2, 6)
run_individual(generations[8].species[1].individuals[1], 2, 6)
 generation 66 fitness: 143.0	 species: 7/5 - 34
foo = Population(5,5)
graphplot(foo)
graphplot(foo.species[1].individual[1])
graphplot(foo.species[1].individuals[1])
graphplot(foo.species[1].individuals[1])
1.0 generation 34 fitness: 77.0	 species: 10/5 - 61
generations
graphplot(generations[].species[1].individual[1])
length(generations)
graphplot(generations[35].species[1].individual[1])
graphplot(generations[35].species[1].individuals[1])
generations
next_generation(generations[7])
next_generation(generations[7])
next_generation(generations[7])
test(Population(134,6))
test(Population(134,6))
exit()
exit()
Float32[2.0 2.0 0.0 2.0 0.0 -1.0 -1.0 -1.0 -1.0 -1.0; 2.0 2.0 4.0 4.0 0.0 -1.0 -1.0 -1.0 -1.0 -1.0; 2.0 0.0 2.0 2.0 0.0 -1.0 -1.0 -1.0 -1.0 -1.0; 2.0 0.0 2.0 2.0 0.0 -1.0 -1.0 -1.0 -1.0 -1.0; 2.0 2.0 2.0 2.0 0.0 -1.0 -1.0 -1.0 -1.0 -1.0; 0.0 2.0 2.0 2.0 0.0 -1.0 -1.0 -1.0 -1.0 -1.0; 0.0 2.0 2.0 2.0 2.0 -1.0 -1.0 -1.0 -1.0 -1.0; 0.0 2.0 2.0 2.0 2.0 -1.0 -1.0 -1.0 -1.0 -1.0; -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0; -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0; -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0; -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0 -1.0]
Comic.add_instance(1)
cd ("ComicNEAT")
cd("ComicNEAT")
Comic.add_instance(1)
Comic.get_environment(1)
reshape(Comic.get_environment(1)[1:10*12], 12, 10) |> transpose
exit()
Comic.add_instance(1,1,1,1,1.5)
foo = deserialize("best")
start()
foo = deserialize("best")
run_individual(foo[2], 1, 6)
Comic.add_instance(2,1,1,1,2)
Comic.add_instance(2,1,1,1,2)
run_individual(foo[2], 2, 6)
Comic.add_instance(3,1,1,1,2)
Comic.add_instance(3,1,1,1,2)
Comic.add_instance(3,1,1,1,2)
run_individual(foo[2], 2, 6)
run_individual(foo[2], 3, 6)
Comic.add_instance(3,1,1,1,2)
run_individual(foo[2], 3, 6)
bar = deserialize("best_161-699")
run_individual(bar[2], 3, 6)
run_individual(bar[2], 3, 6)
run_individual(bar[2], 3, 6)
Comic.add_instance(3,1,1,1,2)
run_individual(bar[2], 3, 6)
baz = deserialize("best_245-899")
run_individual(baz[2], 3, 6)
exit()
Comic.get_environment()
Comic.add_instance(0,0,1,1)
Comic.get_environment(1)
Comic.get_environment(0)
reshape(Comic.get_environment(0)[1:10*12], 12, 10) |> transpose
heatmap(reshape(Comic.get_environment(0)[1:10*12], 12, 10) |> transpose)
heatmap
Makie.heatmap(reshape(Comic.get_environment(0)[1:10*12], 12, 10) |> transpose)
Makie.heatmap(reshape(Comic.get_environment(0)[1:10*12], 12, 10))
reshape(Comic.get_environment(0)[1:10*12], 12, 10) |> transpose
reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10) |> transpose
Makie.heatmap(reshape(Comic.get_environment(0)[1:10*12], 12, 10))
Makie.heatmap(reshape(Comic.get_environment(0)[1:10*12], 12, 10))
Makie.heatmap(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10))
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)))
Makie.heatmap(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10))
Makie.heatmap(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10))
Comic.tick(0,0,0,0,0,1)
Makie.heatmap(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10))
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)))
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dim = 1)
Comic.add_instance(1,1,1,1,1)
Makie.heatmap(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10))
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dim = 1)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dim = 2)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dims= 2)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dims= 1)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dims= 1)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10)), dims=2)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10),dims=1))
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(0)[1:10*12], 12, 10),dims=2))
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(1,0,0,0,0,1)
Comic.tick(0,0,0,0,0,1)
Comic.add_instance(3,1,1,1,1)
Comic.tick(3,0,0,0,0,1)
Comic.tick(3,0,0,0,0,1)
Comic.tick(3,0,0,0,0,1)
Comic.tick(3,0,0,0,0,1)
Comic.add_instance(3,1,1,1,1)
Comic.add_instance(4,1,1,1,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,1,0)
Comic.tick(4,0,0,0,0,1)
Comic.tick(4,0,0,0,0,0)
Comic.tick(4,0,0,0,0,0)
Comic.tick(4,0,0,0,0,0)
Comic.tick(4,0,0,0,0,0)
Comic.tick(4,0,0,0,0,0)
Comic.tick(4,0,0,0,0,0)
Makie.heatmap(reverse(reshape(Comic.get_environment_raw(4)[1:10*12], 12, 10),dims=2))
reverse(reshape(Comic.get_environment_raw(4)[1:10*12], 12, 10),dims=2)
reverse(reshape(Comic.get_environment(4)[1:10*12], 12, 10),dims=2)
Makie.heatmap(reverse(reshape(Comic.get_environment(4)[1:10*12], 12, 10),dims=2))
Makie.heatmap(reverse(reshape(Comic.get_environment(4)[1:10*12], 12, 10),dims=2))
